<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="org.yakindu.sct.statechart.Expressions" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="expressions">
      <ePackage href="http://www.yakindu.org/sct/statechart/Expressions#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Expression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TriggerExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//TriggerExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="triggers" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value=","/>
          <elements xsi:type="xtext:Assignment" feature="triggers" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="GuardExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//GuardExpression"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="expression" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ActionExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//ActionExpression"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" cardinality="+" feature="statement" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.13"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Trigger">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Trigger"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="event" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Event">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Event"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SignalEvent">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//SignalEvent"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="identifier" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TimeEvent">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//TimeEvent"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="after"/>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="duration" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TimeExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//TimeExpression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VariableReference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//VariableReference"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Assignment" feature="variable" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="var"/>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="variable" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Variable">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Variable"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="identifier" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TimeConstant">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//TimeConstant"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="unit" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.12"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="TimeUnit">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//TimeUnit"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//TimeUnit/second"/>
          <literal value="s"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//TimeUnit/millisecond"/>
          <literal value="ms"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//TimeUnit/nanosecond"/>
          <literal value="ns"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Statement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.14"/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VariableAssignment">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//VariableAssignment"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="variableReference" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.28"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ProcedureCall">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//ProcedureCall"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="procedure" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Procedure">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//Procedure"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="identifier" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AssignmentOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/assign"/>
          <literal value="="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/multAssign"/>
          <literal value="*="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/divAssign"/>
          <literal value="/="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/modAssign"/>
          <literal value="%="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/addAssign"/>
          <literal value="+="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/subAssign"/>
          <literal value="-="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/leftShiftAssign"/>
          <literal value="&lt;&lt;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/rightShiftAssign"/>
          <literal value=">>="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/andAssign"/>
          <literal value="&amp;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/xorAssign"/>
          <literal value="^="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AssignmentOperator/orAssign"/>
          <literal value="|="/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EventRaising">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//EventRaising"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="raise"/>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="event" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanOrExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//BooleanOrExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="||"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanAndExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//BooleanAndExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="&amp;&amp;"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BitwiseXorExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//BitwiseXorExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="^"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BitwiseOrExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//BitwiseOrExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="|"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BitwiseAndExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//BitwiseAndExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.24"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Keyword" value="&amp;"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.24"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EqualityExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//EqualityExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.25"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="EqualityOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//EqualityOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//EqualityOperator/equals"/>
          <literal value="=="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//EqualityOperator/notEquals"/>
          <literal value="!="/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="RelationalExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.27"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="RelationalOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalOperator/smaller"/>
          <literal value="&lt;"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalOperator/greater"/>
          <literal value=">"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalOperator/smallerEqual"/>
          <literal value="&lt;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//RelationalOperator/greaterEqual"/>
          <literal value=">="/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ConditionalExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//ConditionalExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="?"/>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=":"/>
          <elements xsi:type="xtext:Assignment" feature="operand3" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ShiftExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//ShiftExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.31"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.30"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.31"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ShiftOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//ShiftOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//ShiftOperator/left"/>
          <literal value="&lt;&lt;"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//ShiftOperator/right"/>
          <literal value=">>"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AdditiveExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//AdditiveExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.33"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.32"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.33"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AdditiveOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//AdditiveOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AdditiveOperator/plus"/>
          <literal value="+"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//AdditiveOperator/minus"/>
          <literal value="-"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="MultiplicativeExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//MultiplicativeExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operand1" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.35"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.34"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operand2" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.35"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="MultiplicativeOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//MultiplicativeOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//MultiplicativeOperator/mul"/>
          <literal value="*"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//MultiplicativeOperator/div"/>
          <literal value="/"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//MultiplicativeOperator/mod"/>
          <literal value="%"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="UnaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.36"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operand" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.37"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="UnaryOperator">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryOperator/positive"/>
          <literal value="+"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryOperator/negative"/>
          <literal value="-"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryOperator/complement"/>
          <literal value="~"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.yakindu.org/sct/statechart/Expressions#//UnaryOperator/not"/>
          <literal value="!"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="PrimaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//PrimaryExpression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.39"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/0/@rules.38"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NestedExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//NestedExpression"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="expression" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.28"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LiteralValue">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.yakindu.org/sct/statechart/Expressions#//LiteralValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.40"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Literal">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.42"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.41"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.43"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="BOOLEAN_LITERAL">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="true"/>
        <elements xsi:type="xtext:Keyword" value="false"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="HEX_LITERAL">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="0"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Keyword" value="x"/>
          <elements xsi:type="xtext:Keyword" value="X"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="+">
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="f"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="F"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="FLOATING_POINT_LITERAL">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:CharacterRange" cardinality="*">
          <left value="0"/>
          <right value="9"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="."/>
        <elements xsi:type="xtext:CharacterRange" cardinality="*">
          <left value="0"/>
          <right value="9"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="e"/>
            <elements xsi:type="xtext:Keyword" value="E"/>
          </elements>
          <elements xsi:type="xtext:Alternatives" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="+"/>
            <elements xsi:type="xtext:Keyword" value="-"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange" cardinality="+">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="f"/>
          <elements xsi:type="xtext:Keyword" value="F"/>
          <elements xsi:type="xtext:Keyword" value="d"/>
          <elements xsi:type="xtext:Keyword" value="D"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/1/@rules.5 /1/@rules.3 /1/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
