/****************************************************************************
 * Copyright (c) 2008, 2010 Andreas Unger and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Andreas Unger - initial API and implementation 
 ****************************************************************************/

package org.eclipselabs.damos.evaluation.internal.providers;

import java.io.StringReader;

import org.eclipse.xtext.parser.IParseResult;
import org.eclipselabs.damos.dml.Argument;
import org.eclipselabs.damos.dml.Block;
import org.eclipselabs.damos.scripting.parser.antlr.BlockscriptParser;
import org.eclipselabs.mscript.language.interpreter.ExpressionValueEvaluator;
import org.eclipselabs.mscript.language.interpreter.IInterpreterContext;
import org.eclipselabs.mscript.language.interpreter.IVariable;
import org.eclipselabs.mscript.language.interpreter.Variable;
import org.eclipselabs.mscript.language.interpreter.value.IValue;
import org.eclipselabs.mscript.language.interpreter.value.InvalidValue;

/**
 * @author Andreas Unger
 *
 */
public class BlockInterpreterContextHelper {

	public void declareArgumentVariables(IInterpreterContext context, Block block, BlockscriptParser parser) {
		for (Argument argument : block.getArguments()) {
			IParseResult result = parser.parse(
					parser.getGrammarAccess().getExpressionRule().getName(),
					new StringReader(argument.getValue().stringValue()));
			if (result.getParseErrors().isEmpty()) {
				IValue argumentValue = new ExpressionValueEvaluator(context).doSwitch(result.getRootASTElement());
				if (!(argumentValue instanceof InvalidValue)) {
					IVariable variable = new Variable();
					variable.setDataType(argumentValue.getDataType());
					variable.setName(argument.getParameter().getName());
					variable.setValue(argumentValue);
					context.addLocalVariable(variable);
				}
			}
		}
	}
	
}
