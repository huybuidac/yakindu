«IMPORT blockdiagram»
«IMPORT org::esmp::dsm::codegen::c»

«EXTENSION org::esmp::dsm::codegen::c::extensions::Block»

«DEFINE main(CCodegenContext ctx) FOR Block»
	«EXPAND headerFile(ctx)»
«ENDDEFINE»

«DEFINE headerFile(CCodegenContext ctx) FOR Block»
	«FILE theHeaderFile(ctx) HEADER-»
		#ifndef «theHeaderMacro(ctx)»
		#define «theHeaderMacro(ctx)»
		
		#include <stdint.h>

		#define «theInitializeFunction(ctx)»()
	
		#define «theLocalDeclarationsMacro(ctx)» \
			«inputPorts.first().getInputDataType().theCDataType(ctx)» «theVariablePrefix(ctx)»inputValueA = «inputPorts.first().getInputDataType().theValue(0)»; \
			«inputPorts.last().getInputDataType().theCDataType(ctx)» «theVariablePrefix(ctx)»inputValueB = «inputPorts.last().getInputDataType().theValue(0)»;
		
		#define «inputs.first().ports.first().theConsumeInputValueFunction(ctx)»(value) \
			«theVariablePrefix(ctx)»inputValueA = (value)
		#define «inputs.last().ports.first().theConsumeInputValueFunction(ctx)»(value) \
			«theVariablePrefix(ctx)»inputValueB = (value)
		
		#define «theComputeOutputValuesFunction(ctx)»()
		
		#define «outputs.first().ports.first().theGetOutputValueFunction(ctx)»() \
			(«theVariablePrefix(ctx)»inputValueA «getParameterValue("Operator")» «theVariablePrefix(ctx)»inputValueB)
		
		#define «theUpdateFunction(ctx)»()
		
		#endif /* «theHeaderMacro(ctx)» */
	«ENDFILE»
«ENDDEFINE»
